// Generated by CoffeeScript 1.6.3
(function() {
  var ReteOpStack, nodePrettyName, operationPrettyName, tokenPretty;

  operationPrettyName = function(opn) {
    return opn;
  };

  nodePrettyName = function(nn) {
    return nn;
  };

  tokenPretty = function(token) {
    var result, value, variable, _i, _len, _ref;
    result = "";
    for (_i = 0, _len = token.length; _i < _len; _i++) {
      _ref = token[_i], variable = _ref[0], value = _ref[1];
      result = result + ("<span class=\"sparql-binding\"><span class=\"sparql-var\">" + variable + "</span> &rarr; <span class=\"sparql-value\">" + value + "</span></span>");
    }
    return result;
  };

  ReteOpStack = (function() {
    function ReteOpStack(element) {
      this.element = element;
      this.element.html("");
    }

    ReteOpStack.prototype.lastEntry = function() {
      return $(this.element).find('div[class="stack-entry"]').last();
    };

    ReteOpStack.prototype.enterNode = function(operation, node, token) {
      var entry, ne, oe, te;
      console.log("enterNode '" + operation + "', '" + node + "', '" + token + "'");
      $(this.element).append('<div class="stack-entry"><span class="operation"></span><span class="node"></span><span class="token"></span></div>');
      entry = this.lastEntry();
      oe = entry.find('span[class="operation"]');
      ne = entry.find('span[class="node"]');
      te = entry.find('span[class="token"]');
      oe.attr('operation', operation);
      ne.attr('node', node);
      te.attr('token', token);
      oe.html(operationPrettyName(operation));
      ne.html(nodePrettyName(node));
      return te.html(tokenPretty(token));
    };

    ReteOpStack.prototype.exitNode = function(operation, node, token) {
      return this.lastEntry.remove();
    };

    return ReteOpStack;

  })();

  $(function() {
    var opStack;
    opStack = new ReteOpStack($('#rete-node-stack'));
    console.log(opStack);
    return opStack.enterNode('add token', 'triple_pattern_node2', [[0, 'ep:eve0'], [1, '"2014-01-07T09:18:21"^^xsd:dateTime']]);
  });

}).call(this);
