PREFIX instans: <http://instans.org/extensions/instans#>
PREFIX rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs:   <http://www.w3.org/2000/01/rdf-schema#>
PREFIX mf:     <http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#>
PREFIX qt:     <http://www.w3.org/2001/sw/DataAccess/tests/test-query#>
PREFIX ut:     <http://www.w3.org/2009/sparql/tests/test-update#>
PREFIX dawgt:  <http://www.w3.org/2001/sw/DataAccess/tests/test-dawg#>

#SELECT ?parsed_ok ?translated_ok ?run_ok ?testtype ?queryfile_short ?error_msg WHERE {
#SELECT ?testtype ?suite ?subdir ?queryfile_short ?datafile_short ?resultfile_short WHERE {
SELECT ?testtype ?suite ?subdir ?queryfile_short ?datafile_short ?resultfile_short ?add_rules ?bindok ?rdfok ?error_msg WHERE {
       {
       ?test a ?testtype_long; mf:name ?name . 
       BIND(strafter(str(?testtype_long),"#") AS ?testtype)
       {
         { ?test mf:action [ qt:query ?queryfile; qt:data ?datafile ] }
	  UNION
	 { ?test mf:action [ ut:request ?queryfile; ut:data ?datafile ] }
       }
       ?x rdf:first ?test .
       ?test mf:result ?resultfile .
       # FILTER(strends(str(?resultfile), ".srx"))
       BIND(strbefore(strafter(str(?queryfile), "instans/tests/"), "/") AS ?suite)
       BIND(strbefore(strafter(str(?queryfile), concat("instans/tests/", ?suite, "/")), "/") AS ?subdir)
       BIND(strafter(str(?queryfile), concat("instans/tests/", ?suite, "/", ?subdir, "/")) AS ?queryfile_short)
       BIND(strafter(str(?datafile), concat("instans/tests/", ?suite, "/", ?subdir, "/")) AS ?datafile_short)
       BIND(strafter(str(?resultfile), concat("instans/tests/", ?suite, "/", ?subdir, "/")) AS ?resultfile_short)
       BIND(iri(strbefore(str(?queryfile),".")) AS ?instans)
       BIND(instans:add_rules(?instans, ?queryfile) AS ?add_rules)
       FILTER(instans:has_status(?instans, "instans-rule-parsing-succeeded") && instans:has_status(?instans, "instans-rule-translation-succeeded"))
       }
       FILTER(instans:add_query_input_processor(?instans, ?datafile))
       BIND(instans:execute(?instans) AS ?bindok)
       BIND(!instans:has_status(?instans, "instans-rdf-parsing-failed") AS ?rdfok)
       # BIND(instans:status(?instans) AS ?status) 
       BIND(instans:error_message(?instans) AS ?error_msg)
}

# # Collect query&datafile
# SELECT ?testtype ?queryfile_short ?datafile_short WHERE {
#        ?test a ?testtype_long; mf:name ?name . 
#        {
#          { ?test mf:action [ qt:query ?queryfile; qt:data ?datafile ] }
# 	  UNION
# 	 { ?test mf:action [ ut:request ?queryfile; ut:data ?datafile ] }
#        }
#        ?x rdf:first ?test .
#        # BIND(iri(strbefore(str(?queryfile),".")) AS ?instans)
#        BIND(strafter(str(?queryfile), "instans/tests/data-") AS ?queryfile_short)
#        BIND(strafter(str(?datafile), "instans/tests/data-") AS ?datafile_short)
#        BIND(strafter(str(?testtype_long),"#") AS ?testtype)
# }
