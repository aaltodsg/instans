PREFIX instans: <http://instans.org/extensions/instans#>
PREFIX rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs:   <http://www.w3.org/2000/01/rdf-schema#>
PREFIX mf:     <http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#>
PREFIX qt:     <http://www.w3.org/2001/sw/DataAccess/tests/test-query#>
PREFIX ut:     <http://www.w3.org/2009/sparql/tests/test-update#>
PREFIX dawgt:  <http://www.w3.org/2001/sw/DataAccess/tests/test-dawg#>

#SELECT ?queryfile ?test { # ?testtype ?parsed_ok ?translate_ok ?error_msg ?status WHERE {
SELECT ?parsed_ok ?translated_ok ?testtype ?queryfile_short ?error_msg WHERE {
       ?test a ?testtype_long; mf:name ?name . 
       {
       #works
         { { ?test mf:action [ qt:query ?queryfile ] } UNION { ?test mf:action [ ut:request ?queryfile ] } }
	 UNION { ?test mf:action ?queryfile FILTER(!isblank(?queryfile) && (strends(str(?queryfile), ".rq") || strends(str(?queryfile), ".ru"))) }
       }
       ?x rdf:first ?test .
       BIND(iri(strbefore(str(?queryfile),".")) AS ?instans)
       BIND(strafter(str(?queryfile), "instans/tests/data-") AS ?queryfile_short)
       BIND(strafter(str(?testtype_long),"#") AS ?testtype)
       BIND(instans:create_instans(?instans) AS ?aux)
       BIND(instans:add_rules(?instans, ?queryfile) AS ?add)
       BIND(instans:has_status(?instans, "instans-rule-parsing-succeeded") AS ?parsed_ok) 
       BIND(instans:has_status(?instans, "instans-rule-translation-succeeded") AS ?translated_ok) 
       BIND(instans:status(?instans) AS ?status) 
       BIND(instans:error_message(?instans) AS ?error_msg)
}
# SELECT ?test ?file WHERE {
#        ?test a ?testtype; mf:name ?name . 
# 	{
# 	   {
# 	       ?test mf:action [ qt:query ?file ]
# 	   }
# 	   UNION
# 	   {
# 	       ?test mf:action [ ut:request ?file ]
# 	   }
# 	   UNION 
# 	   {
# 	      ?test mf:action ?file FILTER(!isblank(?file))
# 	   }
#        }
#        ?x rdf:first ?test .
#        # BIND(iri(strbefore(str(?file),".")) AS ?instans)
#        # BIND(instans:add_rules(?instans, ?file) AS ?add)
#        # BIND(instans:has_status(?instans, "instans-rule-parsing-succeeded") AS ?parsed_ok) 
#        # BIND(instans:has_status(?instans, "instans-rule-translation-succeeded") AS ?translated_ok) 
#        # BIND(instans:status(?instans) AS ?status) 
#        # BIND(instans:error_message(?instans) AS ?error_msg)
# }
