PREFIX dawgt: <http://www.w3.org/2001/sw/DataAccess/tests/test-dawg#>
PREFIX ent: <http://www.w3.org/ns/entailment/>
PREFIX mf: <http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#>
PREFIX mfx: <http://jena.hpl.hp.com/2005/05/test-manifest-extra#>
PREFIX pr: <http://www.w3.org/ns/owl-profile/>
PREFIX qt: <http://www.w3.org/2001/sw/DataAccess/tests/test-query#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX sd: <http://www.w3.org/ns/sparql-service-description#>
PREFIX sparql: <http://www.w3.org/ns/sparql#>
PREFIX ut: <http://www.w3.org/2009/sparql/tests/test-update#>

SELECT ?type ?suite ?collection ?name ?queryfile ?datafile ?graphfile ?resultfile ?resultgraphfile ?resultgraphlabel ?updateresult ?queryserviceendpoint ?queryservicedata ?entailmentprofile ?entailmentregime WHERE {
       { SELECT * { ?test rdf:type ?type
       	 	    FILTER(?type = mf:CSVResultFormatTest
		        || ?type = mf:CSVResultFormatTest
			|| ?type = mf:NegativeSyntaxTest
			|| ?type = mf:NegativeSyntaxTest11
			|| ?type = mf:NegativeUpdateSyntaxTest11
			|| ?type = mf:PositiveSyntaxTest
			|| ?type = mf:PositiveSyntaxTest11
			|| ?type = mf:PositiveUpdateSyntaxTest11
			|| ?type = mf:ProtocolTest
			|| ?type = mf:QueryEvaluationTest
			|| ?type = mf:ServiceDescriptionTest
			|| ?type = mf:UpdateEvaluationTest)
			}}
       BIND(strbefore(strafter(str(<>), "tests/"), "/") AS ?suite)
       BIND(strbefore(strafter(strafter(str(<>), "tests/"), "/"),"/") AS ?collection)
       BIND(strafter(str(?test), "#") AS ?name)
       BIND(str(<>) AS ?base)
       OPTIONAL { ?test mf:action ?queryfile1 FILTER(!isblank(?queryfile1)) }
       OPTIONAL { ?test mf:action ?a .
                  ?a qt:query ?queryfile2
	          OPTIONAL { ?a qt:data ?datafile1 }
	          OPTIONAL { ?a qt:graphData ?graphfile1 }
       }
       OPTIONAL { ?test mf:action ?b .
                  ?b ut:request ?queryfile3
       	          OPTIONAL { ?b ut:data ?datafile2
       	                     OPTIONAL { ?b ut:graphData ?graphfile2 ; rdfs:label ?graphlabel }}}
       BIND(strafter(str(coalesce(?queryfile1, ?queryfile2, ?queryfile3)),?base) AS ?queryfile)
       BIND(strafter(str(coalesce(?datafile1, ?datafile2)),?base) AS ?datafile)
       BIND(strafter(str(coalesce(?graphfile1, ?graphfile2)),?base) AS ?graphfile)
       OPTIONAL { ?test mf:result ?resultfile1 FILTER(!isblank(?resultfile1)) }
       OPTIONAL { ?test mf:result ?r1 .
                  FILTER(isblank(?r1))
                  OPTIONAL { ?r1 ut:data ?resultfile2 }
		  OPTIONAL { ?r1 ut:graphData [ ut:graph ?resultgraphfile1; rdfs:label ?resultgraphlabel ] }
		  OPTIONAL { ?r1 ut:result ?updateresult }
		  OPTIONAL { ?r1 qt:serviceData [ qt:endpoint ?queryserviceendpoint ; qt:data ?queryservicedata ] }
		  OPTIONAL { ?r1 sd:EntailmentProfile ?entailmentprofile }
		  OPTIONAL { ?r1 sd:entailmentRegime ?entailmentregime }
       }
       BIND(strafter(str(coalesce(?resultfile1, ?resultfile2)),?base) AS ?resultfile)
       BIND(strafter(str(coalesce(?resultgraphfile1)),?base) AS ?resultgraphfile)
}
