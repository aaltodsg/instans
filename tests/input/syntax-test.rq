PREFIX instans: <http://instans.org/extensions/instans#>
PREFIX rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX :       <http://www.w3.org/2009/sparql/docs/tests/data-sparql11/bind/manifest#>
PREFIX rdfs:   <http://www.w3.org/2000/01/rdf-schema#>
PREFIX mf:     <http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#>
PREFIX qt:     <http://www.w3.org/2001/sw/DataAccess/tests/test-query#>
PREFIX dawgt:  <http://www.w3.org/2001/sw/DataAccess/tests/test-dawg#>
PREFIX its:    <http://instans.aalto.fi/testsuite/#>

# INSERT { its:work its:member ?entries }
# WHERE { ?testset rdf:type mf:Manifest ;
#        rdfs:label "BIND" ;
#        mf:entries ?entries .
# }

# SELECT ?test ?name ?testtype ?queryfile ?datafile ?resultfile ?parsed_ok ?run_ok WHERE {
#        { ?test a 	       ?testtype;
#          mf:name   ?name .
# 	 ?test mf:action ?action .
# 	 ?action qt:query ?queryfile
#          OPTIONAL{ ?action qt:data ?datafile }
#          OPTIONAL{ ?test mf:result ?resultfile }
#        }
#        BIND(strbefore(str(?queryfile),".rq") AS ?instans)
#        BIND(instans:add_rules(?instans, ?queryfile) AS ?parsed_ok)
#        BIND(?parsed && bound(?datafile) && instans:add_triples(?instans, ?datafile, if(bound(?resultfile), ?resultfile, rdf:nil)) AS ?run_ok)
# }
# ;
SELECT ?queryfile ?testtype ?parsed_ok ?error_msg WHERE {
       ?test a ?testtype; mf:name ?name .
       {
         { ?test mf:action [ qt:query ?queryfile ] } UNION { ?test mf:action ?queryfile }
	 FILTER(strends(str(?queryfile), ".rq") || strends(str(?queryfile), ".ru"))
       }
       BIND(iri(strbefore(str(?queryfile),".")) AS ?instans)
       BIND(instans:add_rules(?instans, ?queryfile) AS ?parsed_ok)
       BIND(instans:error_message(?instans) AS ?error_msg)
}
# SELECT ?queryfile ?testtype ?parsed_ok ?error_msg WHERE {
#        { ?test a 	       ?testtype;
#          mf:name   ?name .
# 	 ?test mf:action ?queryfile 
#          FILTER(strends(str(?queryfile), ".rq") || strends(str(?queryfile), ".ru"))
#        }
#        BIND(iri(strbefore(str(?queryfile),".")) AS ?instans)
#        BIND(instans:add_rules(?instans, ?queryfile) AS ?parsed_ok)
#        BIND(instans:error_message(?instans) AS ?error_msg)
# #       FILTER((?parsed_ok && (?testtype = mf:NegativeSyntaxTest11)) || (! ?parsed_ok && (?testtype = mf:PositiveSyntaxTest11)))
# #       BIND(false AS ?run_ok)
# #       BIND(false AS ?run_ok)
# }
