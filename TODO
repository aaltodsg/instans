- Aquamacs home directory
- .config/common-lisp/source-registry.conf.d
- Parser generator: :RESULT nil not working. Replaced it by :RESULT (progn nil), but should fix the generator.
- indices.lisp: are the hash functions OK?
- Check that triple emitting produces the results in the right order
- Fix the hashing of rdf-iri's and other values in triple-pattern-matcher
  - Or canonize all values, so that eql (or equal) would work.
  - Maybe has to use weak hash tables?
- check make/generate variables/blanks
- check remove-dot-segments
- add instans as a (hidden?) variable to sparql-ops
- setting the base: trailing '/'
- translate-template: is it enough to create rdf-iri by just string?
- check that the compilation of node functions is done at the right place
- where (during of after the parsing of sparql) should we replace blanks with vars?
- at some point, check the efficiency of IRI and literal creation (cashing, lazy evaluation of fields)
- subselects should limit the variables that are passed forward in variable propagation
- unique identity of variables etc? E.g., in sparql-query-results vs. tokens.
- kill exists variables in vars-out
- check that literals with lang tags have a lang (results)
- Fix: same blank node cannot be used in two different BGPs (test ~/Sparql/www.w3.org/2001/sw/DataAccess/tests/data-r2/syntax-sparql4/syn-bad-34.rq)
- When parser executes rules, it assumes that the actions return multiple (or no) values intentionally. Thus, if you wish to return only a single value, take care that the actions don't produce many. This may be a bad thing.
- Implement preprocessing of hex codepoints.
- Implement joining of BGP:s after filter removal and move blank checking after the translation of ggp
- Make function lookup to produce different kind of 'error' messaging, when a foreign function is not found.


