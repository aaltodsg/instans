BASE <http://instans.org/>
PREFIX :<http:instans.org/default#>
PREFIX geo:<http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX ssn:<http://purl.oclc.org/NET/ssnx/ssn#>
PREFIX ep:<http://www.ontologydesignpatterns.org/cp/owl/eventprocessing.owl#>
PREFIX omgeo: <http://www.ontotext.com/owlim/geo#>
PREFIX ff: <http://factforge.net/>

# Transform (auxiliary rule): Create directional events

# @name EPA8-Transform
DELETE {  GRAPH <memory> { # Delete previous memory entry
  :transform ssn:Sensor ?sensor ;
       :prevLat ?prevlat ;
       :prevLong ?prevlong }
  GRAPH <directions> { # Clean older directional entries
    ?oldEvent a ep:EventObject ;
              ssn:Sensor ?oldSensor ;
	      :direction ?oldDir } }
INSERT { GRAPH <memory> { # Write new entry to memory
    :transform ssn:Sensor ?sensor ;
       :prevLat ?lat ;
       :prevLong ?long  }
  GRAPH <directions> { # Output directional information
    ?event a ep:EventObject ;
           ssn:Sensor ?sensor ;
	   :direction ?dir } }
WHERE { GRAPH <source> {
    ?event a ep:EventObject ; # Match incoming events
           ssn:Sensor ?sensor ;
           geo:Point [ geo:lat ?lat ; geo:long ?long ; ] . } 
  OPTIONAL { GRAPH <memory> { # Retrieve coordinates of previous event from memory-graph
    :transform ssn:Sensor ?sensor ;
    	 :prevLat ?prevlat ;
         :prevLong ?prevlong } }
  BIND ( IF ( ?lat > ?prevlat, "N", "") as ?latdir1) # Test for directions
  BIND ( IF ( ?lat < ?prevlat, "S", "") as ?latdir2)
  BIND ( IF ( ?long > ?prevlong, "E", "") as ?longdir1)
  BIND ( IF ( ?long < ?prevlong, "W", "") as ?longdir2) 
  BIND ( concat(?latdir1, ?latdir2, ?longdir1, ?longdir2) as ?tdir ) # Concatenate result
  BIND ( IF ( !bound(?tdir) || strlen(?tdir)=0, "0", ?tdir ) as ?dir )
  OPTIONAL { GRAPH <directions> {
    ?oldEvent a ep:EventObject ;
              ssn:Sensor ?oldSensor ;
	      :direction ?oldDir } }
} ;

# Output everything

# @name Output
CONSTRUCT { ?s ?p ?o }
WHERE { GRAPH <directions> { ?s ?p ?o } }

# CONSTRUCT {
#    ?event a ep:EventObject ;
#            ssn:Sensor ?sensor ;
# 	   :direction ?dir
# }
# WHERE { GRAPH <directions> {
#    ?event a ep:EventObject ;
#           ssn:Sensor ?sensor ;
#	   :direction ?dir } }
