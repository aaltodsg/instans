
PREFIX :<http:example.org/>
PREFIX geo:<http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX ssn:<http://purl.oclc.org/NET/ssnx/ssn#>
PREFIX ep:<http://www.ontologydesignpatterns.org/cp/owl/eventprocessing.owl#>
PREFIX omgeo: <http://www.ontotext.com/owlim/geo#>
PREFIX ff: <http://factforge.net/>

# Stateful filter (EPA 2): Only 1 event per hour

# Split to two queries, because the memory needs to be updated also when no event is forwarded

# EPA 2 a: Initialize filter
#INSERT DATA { GRAPH <http://example.org/memory/> {
#  :stateful :prevHour -1 .
#  :stateful2 :foo :bar  } } ;           

# EPA 2 b: Update status in memory

DELETE { GRAPH <http://example.org/memory/> { # Clear memory
    :stateful :prevHour ?prevhour ;
              :uuid ?prevuuid } }
INSERT { GRAPH <http://example.org/memory/> { # Write new value to memory
     :stateful :prevHour ?hour ;
               :uuid ?uuid .
     :statefulEvent ?event ?forward }  
}
WHERE { GRAPH <http://example.org/poststateless/> {
    ?event ep:hasEventObjectSamplingTime ?time }
  BIND (uuid() AS ?uuid)
  GRAPH <http://example.org/memory/> { # Retrieve value from memory, if available
    OPTIONAL {
    :stateful :prevHour ?prevhour ;
              :uuid ?prevuuid .
#    :statefulEvent ?prevEvent ?prevForward .
    FILTER (?uuid != ?prevuuid) }
  }
  BIND ( HOURS(?time) as ?hour)
  BIND ( IF ( ?hour != COALESCE(?prevhour,-1),true,false) AS ?forward)
} ;

#DELETE { GRAPH <http://example.org/memory/> { # Clear forwarding status
#    :statefulEvent ?event ?forward } }
#INSERT { GRAPH <http://example.org/poststateful/> { # Forward outgoing events
#      ?event ?p1 ?o1 .
#      ?h2 ?p2 ?o2
#    }
#}
#WHERE { GRAPH <http://example.org/poststateless/> {
#    ?event a ep:EventObject ; # Match incoming events
#           ?p1 ?o1 ;
#    OPTIONAL { BIND ( IF (isBlank(?o1), ?o1, 0) as ?h2)
#            ?h2 ?p2 ?o2 }
#    }
#  GRAPH <http://example.org/memory/> { # instructions
#      :statefulEvent ?event ?forward }
#  FILTER ( ?forward )
#} ;


# Output everything

SELECT *
WHERE { GRAPH <http://example.org/memory/> { ?s ?p ?o } }


