BASE <http://instans.org/>
PREFIX : <http:instans.org/default#>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX ssn: <http://purl.oclc.org/NET/ssnx/ssn#>
PREFIX ep: <http://www.ontologydesignpatterns.org/cp/owl/eventprocessing.owl#>
PREFIX omgeo: <http://www.ontotext.com/owlim/geo#>
PREFIX ff: <http://factforge.net/>

# Stateless filter (EPA 1): Only events generated during business hours

# @name EPA1-Stateless
INSERT { GRAPH ?newgraph { ?s ?p ?o } }
WHERE { GRAPH ?g {
    FILTER ( strStarts(str(?g),concat(str(<>),"Eve")) )
    ?s ?p ?o .
    ?event ep:hasEventObjectSamplingTime ?time }
  FILTER ( ( HOURS(?time) > 8 ) && ( HOURS(?time) < 17 ) )
  BIND (IRI(concat("Poststateless-",strAfter(str(?event),str(<>)))) AS ?newgraph)
} ;

# Stateful filter (EPA 2): Only 1 event per hour

# @name EPA2-Init adds initial state to <memory>
INSERT DATA { GRAPH <memory> {  :stateful :hour -1 ; :passEvent [] } };

# @name EPA2-Stateful-update-memory
DELETE { GRAPH <memory> { :stateful :hour ?prevhour ;
                                    :passEvent ?prevPass } }
INSERT { GRAPH <memory> { :stateful :hour ?hour ;
                                    :passEvent ?event } }
WHERE { GRAPH ?g {
    # Matches basic events, update for other Channel names
    FILTER ( strStarts(str(?g),"Poststateless-Eve") )
    ?event ep:hasEventObjectSamplingTime ?time }
  GRAPH <memory> { :stateful :hour ?prevhour ;
                             :passEvent ?prevPass }
  BIND ( HOURS(?time) as ?hour)
  FILTER ( ?hour != ?prevhour ) # Compare current hour with memory
} ;

# @name EPA2-Stateful-pass-one-event-per-hour
CONSTRUCT { GRAPH ?newgraph { ?s ?p ?o } }
WHERE {
  GRAPH <memory> { :stateful :passEvent ?event }
  GRAPH ?g {
    # Matches basic events, update for other Channel names
    FILTER ( strStarts(str(?g),"Poststateless-Eve") )
    ?event ep:hasEventObjectSamplingTime ?time .
    ?s ?p ?o }
  BIND (IRI(concat("Poststateful-",strAfter(str(?event),str(<>)))) AS ?newgraph)
} ;

# SELECT *
# WHERE { GRAPH ?g { ?s ?p ?o } } ;

# @name Cleanup-Poststateless
DELETE { GRAPH ?g1 { ?s ?p ?o } }
WHERE { GRAPH ?g1 {
    FILTER ( strStarts(str(?g1),"Poststateless-Eve") )
    ?event1 ep:hasEventObjectSamplingTime ?time1 .
    ?s ?p ?o }
  FILTER EXISTS { GRAPH ?g2 {
    FILTER ( strStarts(str(?g2),"Poststateless-Eve") )
    ?event2 ep:hasEventObjectSamplingTime ?time2 .
      FILTER (?time1 < ?time2)
  }  }
} ;