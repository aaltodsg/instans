;;; -*- Mode: Lisp; Syntax: COMMON-LISP; Base: 10; Package: INSTANS -*-
;;;
;;; Author: Esko Nuutila (esko.nuutila@aalto.fi)
;;;

(in-package #:instans)

(defun test-dirs (test-set)
  (unless (member test-set '(:r2 :sparql11))
    (error* "Unknown test set ~A" test-set))
  (directory (format nil "~A/tests/data-~A/*/" (namestring (find-instans-root-directory)) (string-downcase (string test-set)))))

(defun manifests (test-set)
  (mapcan #'(lambda (d) (directory (format nil "~A/manifest.ttl" (namestring d)))) (test-dirs test-set)))

(defun manifest-tests (manifest &optional (query (concatenate 'string (namestring (find-instans-root-directory)) "tests/input/syntax-test.rq")))
  (let* ((base (format nil "file://~A" (directory-namestring (truename manifest))))
	 (instans (main-test (format nil "--select-output-type solution-set -b ~A -r ~A -t ~A" base query manifest)))
	 (p (instans-select-output-processor instans)))
    (cond ((solution-set-output-processor-p p)
	   (if (slot-boundp p 'variables)
	       (values (solution-set-output-processor-variables p)
		       (solution-set-output-processor-bindings p))
	       (values nil nil)))
	  (t nil))))

(defun manifest-tests-pretty (kind &optional query)
  (let ((root (namestring (find-instans-root-directory))))
    (multiple-value-bind (manifest default-query)
	(case kind
	  ((:ttl :turtle)
	   (values (format nil "~A/tests/RDF/TurtleTests/manifest.ttl" root) (format nil "~A/tests/input/trig-test-runner.rq" root)))
	  (:trig
	   (values (format nil "~A/tests/RDF/TrigTests/manifest.ttl" root) (format nil "~A/tests/input/trig-test-runner.rq" root)))
	  ((:nt :ntriples)
	   (values (format nil "~A/tests/RDF/N-TriplesTests/manifest.ttl" root) (format nil "~A/tests/input/n-quads-test-runner.rq" root)))
	  ((:nq :nquads)
	   (values (format nil "~A/tests/RDF/N-QuadsTests/manifest.ttl" root) (format nil "~A/tests/input/n-quads-test-runner.rq" root)))
	  (t (error* "Illegal kind ~A" kind)))
      (multiple-value-bind (variables bindings)
	  (manifest-tests manifest (or query default-query))
	(inform "~{~A~^,~}:" variables) (loop for x in bindings do (inform "~{~A~^,~}" x))))))

(defvar *r2-dirs*)
(defvar *sparql11-dirs*)
(defvar *all-dirs*)
(defvar *r2-manifests*)
(defvar *sparql11-manifests*)
(defvar *all-manifests*)

(defun test-init ()
  (setf *r2-dirs* (test-dirs :r2))
  (setf *sparql11-dirs* (test-dirs :sparql11))
  (setf *all-dirs* (append *r2-dirs* *sparql11-dirs*))
  (setf *r2-manifests* (manifests :r2))
  (setf *sparql11-manifests* (manifests  :sparql11))
  (setf *all-manifests* (append *r2-manifests* *sparql11-manifests*)))

(defun test-counts (&rest args)
  (flet ((testlist (name list)
	   (inform "~A:" name)
	   (loop for m in list for nvals = (length (second (multiple-value-list (apply #'manifest-tests m args))))
	      do (inform "~2d tests in ~A" nvals m) sum nvals into count finally (inform "~4D tests" count))))
    (testlist "DATA-R2" *r2-manifests*)
    (testlist "DATA-SPARQL11" *sparql11-manifests*)))

(defun test-files (&rest args)
  (flet ((testlist (name list)
	   (inform "~A:" name)
	   (loop for m in list for solution = (multiple-value-list (apply #'manifest-tests m args))
	      for vars = (first solution)
	      for results = (second solution)
	      for nvals = (length results)
	      do (inform "~2d tests in ~A:" nvals m)
	      do (loop for result in results do (inform "~{  ~{~12A: ~A~}~^~%~}" (mapcar #'list vars result))
		      when (and (second result) (not (third result))) do (inform "!!!"))
	      sum nvals into count finally (inform "~4D tests" count))))
    (testlist "DATA-R2" *r2-manifests*)
    (testlist "DATA-SPARQL11" *sparql11-manifests*)))

(defun issue-test (n htmlp)
  (let* ((rootdir (namestring (find-instans-root-directory)))
	 (dir (format nil "~A/tests/input/issues" rootdir))
	 (file-base (format nil "~A/issue~D" dir n))
	 (sh-file (format nil "~A.sh" file-base))
	 (sh-string (with-open-file (str sh-file) (read-line str)))
	 (args (format nil "~A-d file://~A/ ~A"
		       (if htmlp (format nil "--rete-html-file ~A/tests/output " rootdir) "")
		       dir (subseq sh-string (+ (search "instans " sh-string) 8)))))
    (inform "Running issue test ~D with args ~A" n args)
    (main-test args)))

(defvar *trig-iof*
  (list
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/anonymous_blank_node_graph.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/labeled_blank_node_graph.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/labeled_blank_node_graph.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/labeled_blank_node_graph.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/alternating_iri_graphs.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/alternating_iri_graphs.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/alternating_bnode_graphs.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/alternating_bnode_graphs.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/IRI_subject.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/IRI_spo.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/IRI_with_four_digit_numeric_escape.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/IRI_spo.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/IRI_with_eight_digit_numeric_escape.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/IRI_spo.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/IRI_with_all_punctuation.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/IRI_with_all_punctuation.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/bareword_a_predicate.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/bareword_a_predicate.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/old_style_prefix.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/IRI_spo.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/SPARQL_style_prefix.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/IRI_spo.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/prefixed_IRI_predicate.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/IRI_spo.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/prefixed_IRI_object.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/IRI_spo.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/prefix_only_IRI.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/IRI_spo.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/prefix_with_PN_CHARS_BASE_character_boundaries.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/IRI_spo.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/prefix_with_non_leading_extras.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/IRI_spo.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/localName_with_assigned_nfc_bmp_PN_CHARS_BASE_character_boundaries.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/localName_with_assigned_nfc_bmp_PN_CHARS_BASE_character_boundaries.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/localName_with_assigned_nfc_PN_CHARS_BASE_character_boundaries.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/localName_with_assigned_nfc_PN_CHARS_BASE_character_boundaries.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/localName_with_nfc_PN_CHARS_BASE_character_boundaries.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/localName_with_nfc_PN_CHARS_BASE_character_boundaries.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/default_namespace_IRI.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/IRI_spo.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/prefix_reassigned_and_used.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/prefix_reassigned_and_used.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/reserved_escaped_localName.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/reserved_escaped_localName.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/percent_escaped_localName.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/percent_escaped_localName.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/HYPHEN_MINUS_in_localName.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/HYPHEN_MINUS_in_localName.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/underscore_in_localName.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/underscore_in_localName.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/localname_with_COLON.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/localname_with_COLON.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/localName_with_leading_underscore.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/localName_with_leading_underscore.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/localName_with_leading_digit.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/localName_with_leading_digit.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/localName_with_non_leading_extras.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/localName_with_non_leading_extras.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/old_style_base.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/IRI_spo.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/SPARQL_style_base.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/IRI_spo.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/labeled_blank_node_subject.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/labeled_blank_node_subject.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/labeled_blank_node_object.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/labeled_blank_node_object.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/labeled_blank_node_with_PN_CHARS_BASE_character_boundaries.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/labeled_blank_node_object.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/labeled_blank_node_with_leading_underscore.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/labeled_blank_node_object.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/labeled_blank_node_with_leading_digit.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/labeled_blank_node_object.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/labeled_blank_node_with_non_leading_extras.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/labeled_blank_node_object.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/anonymous_blank_node_subject.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/anonymous_blank_node_subject.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/anonymous_blank_node_object.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/anonymous_blank_node_object.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/sole_blankNodePropertyList.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/sole_blankNodePropertyList.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/blankNodePropertyList_as_subject.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/blankNodePropertyList_as_subject.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/blankNodePropertyList_as_object.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/blankNodePropertyList_as_object.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/blankNodePropertyList_with_multiple_triples.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/blankNodePropertyList_with_multiple_triples.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/nested_blankNodePropertyLists.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/nested_blankNodePropertyLists.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/blankNodePropertyList_containing_collection.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/blankNodePropertyList_containing_collection.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/collection_subject.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/collection_subject.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/collection_object.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/collection_object.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/empty_collection.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/empty_collection.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/nested_collection.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/nested_collection.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/first.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/first.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/last.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/last.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/LITERAL1.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/LITERAL1.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/LITERAL1_ascii_boundaries.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/LITERAL1_ascii_boundaries.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/LITERAL1_with_UTF8_boundaries.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/LITERAL_with_UTF8_boundaries.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/LITERAL1_all_controls.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/LITERAL1_all_controls.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/LITERAL1_all_punctuation.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/LITERAL1_all_punctuation.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/LITERAL_LONG1.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/LITERAL1.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/LITERAL_LONG1_ascii_boundaries.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/LITERAL_LONG1_ascii_boundaries.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/LITERAL_LONG1_with_UTF8_boundaries.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/LITERAL_with_UTF8_boundaries.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/LITERAL_LONG1_with_1_squote.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/LITERAL_LONG1_with_1_squote.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/LITERAL_LONG1_with_2_squotes.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/LITERAL_LONG1_with_2_squotes.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/LITERAL2.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/LITERAL1.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/LITERAL2_ascii_boundaries.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/LITERAL2_ascii_boundaries.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/LITERAL2_with_UTF8_boundaries.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/LITERAL_with_UTF8_boundaries.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/LITERAL_LONG2.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/LITERAL1.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/LITERAL_LONG2_ascii_boundaries.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/LITERAL_LONG2_ascii_boundaries.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/LITERAL_LONG2_with_UTF8_boundaries.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/LITERAL_with_UTF8_boundaries.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/LITERAL_LONG2_with_1_squote.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/LITERAL_LONG2_with_1_squote.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/LITERAL_LONG2_with_2_squotes.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/LITERAL_LONG2_with_2_squotes.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/literal_with_CHARACTER_TABULATION.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/literal_with_CHARACTER_TABULATION.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/literal_with_BACKSPACE.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/literal_with_BACKSPACE.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/literal_with_LINE_FEED.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/literal_with_LINE_FEED.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/literal_with_CARRIAGE_RETURN.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/literal_with_CARRIAGE_RETURN.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/literal_with_FORM_FEED.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/literal_with_FORM_FEED.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/literal_with_REVERSE_SOLIDUS.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/literal_with_REVERSE_SOLIDUS.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/literal_with_escaped_CHARACTER_TABULATION.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/literal_with_CHARACTER_TABULATION.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/literal_with_escaped_BACKSPACE.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/literal_with_BACKSPACE.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/literal_with_escaped_LINE_FEED.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/literal_with_LINE_FEED.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/literal_with_escaped_CARRIAGE_RETURN.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/literal_with_CARRIAGE_RETURN.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/literal_with_escaped_FORM_FEED.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/literal_with_FORM_FEED.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/literal_with_numeric_escape4.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/literal_with_numeric_escape4.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/literal_with_numeric_escape8.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/literal_with_numeric_escape4.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/IRIREF_datatype.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/IRIREF_datatype.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/prefixed_name_datatype.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/IRIREF_datatype.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/bareword_integer.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/IRIREF_datatype.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/bareword_decimal.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/bareword_decimal.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/bareword_double.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/bareword_double.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/double_lower_case_e.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/double_lower_case_e.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/negative_numeric.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/negative_numeric.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/positive_numeric.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/positive_numeric.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/numeric_with_leading_0.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/numeric_with_leading_0.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/literal_true.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/literal_true.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/literal_false.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/literal_false.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/langtagged_non_LONG.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/langtagged_non_LONG.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/langtagged_LONG.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/langtagged_non_LONG.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/lantag_with_subtag.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/lantag_with_subtag.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/objectList_with_two_objects.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/objectList_with_two_objects.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/predicateObjectList_with_two_objectLists.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/predicateObjectList_with_two_objectLists.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/repeated_semis_at_end.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/predicateObjectList_with_two_objectLists.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/repeated_semis_not_at_end.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/repeated_semis_not_at_end.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-eval-struct-01.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-eval-struct-01.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-eval-struct-02.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-eval-struct-02.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-01.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-01.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-02.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-02.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-03.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-03.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-04.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-04.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-05.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-05.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-06.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-06.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-07.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-07.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-08.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-08.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-09.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-09.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-10.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-10.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-11.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-11.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-12.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-12.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-13.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-13.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-14.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-14.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-15.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-15.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-16.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-16.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-17.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-17.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-18.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-18.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-19.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-19.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-20.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-20.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-21.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-21.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-22.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-22.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-23.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-23.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-24.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-24.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-25.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-25.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-26.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-26.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-27.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/trig-subm-27.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/comment_following_localName.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/IRI_spo.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/number_sign_following_localName.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/number_sign_following_localName.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/comment_following_PNAME_NS.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/comment_following_PNAME_NS.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/number_sign_following_PNAME_NS.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/number_sign_following_PNAME_NS.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/LITERAL_LONG2_with_REVERSE_SOLIDUS.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/LITERAL_LONG2_with_REVERSE_SOLIDUS.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/two_LITERAL_LONG2s.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/two_LITERAL_LONG2s.nq"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/langtagged_LONG_with_subtag.trig") (parse-iri "file:///Users/enu/instans/tests/RDF/TrigTests/langtagged_LONG_with_subtag.nq"))
))

(defvar *turtle-iof* 
  (list
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/IRI_subject.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/IRI_spo.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/IRI_with_four_digit_numeric_escape.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/IRI_spo.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/IRI_with_eight_digit_numeric_escape.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/IRI_spo.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/IRI_with_all_punctuation.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/IRI_with_all_punctuation.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/bareword_a_predicate.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/bareword_a_predicate.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/old_style_prefix.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/IRI_spo.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/SPARQL_style_prefix.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/IRI_spo.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/prefixed_IRI_predicate.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/IRI_spo.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/prefixed_IRI_object.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/IRI_spo.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/prefix_only_IRI.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/IRI_spo.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/prefix_with_PN_CHARS_BASE_character_boundaries.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/IRI_spo.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/prefix_with_non_leading_extras.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/IRI_spo.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/localName_with_assigned_nfc_bmp_PN_CHARS_BASE_character_boundaries.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/localName_with_assigned_nfc_bmp_PN_CHARS_BASE_character_boundaries.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/localName_with_assigned_nfc_PN_CHARS_BASE_character_boundaries.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/localName_with_assigned_nfc_PN_CHARS_BASE_character_boundaries.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/localName_with_nfc_PN_CHARS_BASE_character_boundaries.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/localName_with_nfc_PN_CHARS_BASE_character_boundaries.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/default_namespace_IRI.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/IRI_spo.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/prefix_reassigned_and_used.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/prefix_reassigned_and_used.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/reserved_escaped_localName.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/reserved_escaped_localName.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/percent_escaped_localName.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/percent_escaped_localName.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/HYPHEN_MINUS_in_localName.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/HYPHEN_MINUS_in_localName.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/underscore_in_localName.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/underscore_in_localName.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/localname_with_COLON.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/localname_with_COLON.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/localName_with_leading_underscore.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/localName_with_leading_underscore.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/localName_with_leading_digit.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/localName_with_leading_digit.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/localName_with_non_leading_extras.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/localName_with_non_leading_extras.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/old_style_base.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/IRI_spo.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/SPARQL_style_base.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/IRI_spo.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/labeled_blank_node_subject.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/labeled_blank_node_subject.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/labeled_blank_node_object.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/labeled_blank_node_object.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/labeled_blank_node_with_PN_CHARS_BASE_character_boundaries.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/labeled_blank_node_object.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/labeled_blank_node_with_leading_underscore.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/labeled_blank_node_object.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/labeled_blank_node_with_leading_digit.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/labeled_blank_node_object.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/labeled_blank_node_with_non_leading_extras.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/labeled_blank_node_object.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/anonymous_blank_node_subject.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/labeled_blank_node_subject.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/anonymous_blank_node_object.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/labeled_blank_node_object.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/sole_blankNodePropertyList.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/labeled_blank_node_subject.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/blankNodePropertyList_as_subject.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/blankNodePropertyList_as_subject.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/blankNodePropertyList_as_object.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/blankNodePropertyList_as_object.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/blankNodePropertyList_with_multiple_triples.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/blankNodePropertyList_with_multiple_triples.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/nested_blankNodePropertyLists.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/nested_blankNodePropertyLists.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/blankNodePropertyList_containing_collection.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/blankNodePropertyList_containing_collection.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/collection_subject.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/collection_subject.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/collection_object.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/collection_object.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/empty_collection.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/empty_collection.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/nested_collection.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/nested_collection.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/first.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/first.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/last.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/last.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/LITERAL1.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/LITERAL1.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/LITERAL1_ascii_boundaries.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/LITERAL1_ascii_boundaries.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/LITERAL1_with_UTF8_boundaries.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/LITERAL_with_UTF8_boundaries.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/LITERAL1_all_controls.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/LITERAL1_all_controls.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/LITERAL1_all_punctuation.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/LITERAL1_all_punctuation.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/LITERAL_LONG1.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/LITERAL1.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/LITERAL_LONG1_ascii_boundaries.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/LITERAL_LONG1_ascii_boundaries.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/LITERAL_LONG1_with_UTF8_boundaries.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/LITERAL_with_UTF8_boundaries.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/LITERAL_LONG1_with_1_squote.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/LITERAL_LONG1_with_1_squote.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/LITERAL_LONG1_with_2_squotes.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/LITERAL_LONG1_with_2_squotes.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/LITERAL2.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/LITERAL1.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/LITERAL2_ascii_boundaries.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/LITERAL2_ascii_boundaries.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/LITERAL2_with_UTF8_boundaries.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/LITERAL_with_UTF8_boundaries.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/LITERAL_LONG2.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/LITERAL1.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/LITERAL_LONG2_ascii_boundaries.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/LITERAL_LONG2_ascii_boundaries.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/LITERAL_LONG2_with_UTF8_boundaries.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/LITERAL_with_UTF8_boundaries.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/LITERAL_LONG2_with_1_squote.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/LITERAL_LONG2_with_1_squote.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/LITERAL_LONG2_with_2_squotes.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/LITERAL_LONG2_with_2_squotes.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/literal_with_CHARACTER_TABULATION.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/literal_with_CHARACTER_TABULATION.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/literal_with_BACKSPACE.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/literal_with_BACKSPACE.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/literal_with_LINE_FEED.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/literal_with_LINE_FEED.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/literal_with_CARRIAGE_RETURN.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/literal_with_CARRIAGE_RETURN.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/literal_with_FORM_FEED.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/literal_with_FORM_FEED.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/literal_with_REVERSE_SOLIDUS.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/literal_with_REVERSE_SOLIDUS.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/literal_with_escaped_CHARACTER_TABULATION.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/literal_with_CHARACTER_TABULATION.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/literal_with_escaped_BACKSPACE.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/literal_with_BACKSPACE.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/literal_with_escaped_LINE_FEED.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/literal_with_LINE_FEED.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/literal_with_escaped_CARRIAGE_RETURN.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/literal_with_CARRIAGE_RETURN.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/literal_with_escaped_FORM_FEED.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/literal_with_FORM_FEED.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/literal_with_numeric_escape4.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/literal_with_numeric_escape4.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/literal_with_numeric_escape8.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/literal_with_numeric_escape4.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/IRIREF_datatype.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/IRIREF_datatype.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/prefixed_name_datatype.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/IRIREF_datatype.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/bareword_integer.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/IRIREF_datatype.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/bareword_decimal.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/bareword_decimal.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/bareword_double.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/bareword_double.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/double_lower_case_e.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/double_lower_case_e.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/negative_numeric.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/negative_numeric.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/positive_numeric.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/positive_numeric.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/numeric_with_leading_0.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/numeric_with_leading_0.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/literal_true.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/literal_true.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/literal_false.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/literal_false.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/langtagged_non_LONG.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/langtagged_non_LONG.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/langtagged_LONG.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/langtagged_non_LONG.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/lantag_with_subtag.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/lantag_with_subtag.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/objectList_with_two_objects.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/objectList_with_two_objects.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/predicateObjectList_with_two_objectLists.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/predicateObjectList_with_two_objectLists.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/repeated_semis_at_end.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/predicateObjectList_with_two_objectLists.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/repeated_semis_not_at_end.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/repeated_semis_not_at_end.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-eval-struct-01.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-eval-struct-01.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-eval-struct-02.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-eval-struct-02.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-01.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-01.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-02.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-02.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-03.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-03.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-04.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-04.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-05.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-05.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-06.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-06.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-07.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-07.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-08.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-08.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-09.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-09.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-10.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-10.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-11.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-11.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-12.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-12.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-13.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-13.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-14.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-14.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-15.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-15.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-16.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-16.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-17.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-17.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-18.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-18.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-19.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-19.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-20.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-20.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-21.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-21.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-22.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-22.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-23.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-23.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-24.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-24.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-25.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-25.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-26.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-26.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-27.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/turtle-subm-27.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/comment_following_localName.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/IRI_spo.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/number_sign_following_localName.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/number_sign_following_localName.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/comment_following_PNAME_NS.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/comment_following_PNAME_NS.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/number_sign_following_PNAME_NS.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/number_sign_following_PNAME_NS.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/LITERAL_LONG2_with_REVERSE_SOLIDUS.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/LITERAL_LONG2_with_REVERSE_SOLIDUS.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/two_LITERAL_LONG2s.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/two_LITERAL_LONG2s.nt"))
   (list (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/langtagged_LONG_with_subtag.ttl") (parse-iri "file:///Users/enu/instans/tests/RDF/TurtleTests/langtagged_LONG_with_subtag.nt"))
))

(defun ttt (n type)
  (multiple-value-bind (manifest-http-root-dir items)
      (if (eq type :trig) (values "http://www.w3.org/2013/TriGTests/" *trig-iof*) (values "http://www.w3.org/2013/TurtleTests/" *turtle-iof*))
    (let* ((item (nth n items))
	   (input1-file-iri (first item))
	   (input1-path (pathname (rdf-iri-path input1-file-iri)))
	   (input1-filename (format nil "~A.~A" (pathname-name input1-path) (pathname-type input1-path)))
	   ;; (input2-file-iri (second item))
	   ;; (input2-path (pathname (rdf-iri-path input2-file-iri)))
	   ;; (input2-filename (format nil "~A.~A" (pathname-name input2-path) (pathname-type input2-path)))
	   )
;      (inform "~S vs. ~S" input1-filename input2-filename)
      (funcall #'instans-compare-rdf-files (parse-iri "test") (first item) (second item)
	       :base (parse-iri (format nil "~A~A" manifest-http-root-dir input1-filename))))))

(defun ttt-all (type)
  (loop with items = (if (eq type :trig) *trig-iof* *turtle-iof*)
	for i from 0 below (length items)
        unless (ttt i type) collect (list i (nth i items))))


(defun fulltest (dirname)
  (let ((base (format nil "file://~A" dirname))
	(manifest (format nil "~A/manifest.ttl" dirname))
	(query (format nil "~A/tests/input/testsuite.rq" (namestring (find-instans-root-directory)))))
;    (inform "")
    (cond ((probe-file manifest)
	   (inform "Directory ~A:~%~%" dirname)
	   (main "-b" base "-r" query "-t" manifest))
	  (t
;	   (inform "No manifest.ttl in directory ~A" dirname)
))))
