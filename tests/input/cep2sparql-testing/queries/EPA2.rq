BASE <http://instans.org/>
PREFIX : <http:instans.org/default#>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX ssn: <http://purl.oclc.org/NET/ssnx/ssn#>
PREFIX ep: <http://www.ontologydesignpatterns.org/cp/owl/eventprocessing.owl#>
PREFIX omgeo: <http://www.ontotext.com/owlim/geo#>
PREFIX ff: <http://factforge.net/>

# Stateful filter (EPA 2): Only 1 event per hour

# @name EPA2-Stateful
DELETE { GRAPH <memory> { # Clear memory
    :stateful :prevHour ?prevhour } }
INSERT { GRAPH <poststateful> { # Forward outgoing events
      ?event ?p1 ?o1 .
      ?h2 ?p2 ?o2
    }
 GRAPH <memory> { # Write new value to memory
     :stateful :prevHour ?hour }  
}
WHERE { GRAPH <poststateless> {
    ?event a ep:EventObject ; # Match incoming events
           ?p1 ?o1 ;
           ep:hasEventObjectSamplingTime ?time .
    OPTIONAL { BIND ( IF (isBlank(?o1), ?o1, 0) as ?h2)
            ?h2 ?p2 ?o2 } }
  GRAPH <memory> { # Retrieve value from memory, if available
    OPTIONAL  { ?mem :prevHour ?prevhour } }
  BIND ( HOURS(?time) as ?hour)
  FILTER ( ?hour != COALESCE(?prevhour,-1) ) # Compare current hour with memory
} ;

# Cleanup <poststateless> when a newer event is available

# # @name Cleanup-Poststateless
DELETE {
  GRAPH <poststateless> {
    ?event1 ?p1 ?o1 .
    ?h2 ?p2 ?o2 .
  }
}
WHERE {
  GRAPH <poststateless> {
    ?event1 a ep:EventObject ;    # Match incoming events
           ?p1 ?o1 ;
           ep:hasEventObjectSamplingTime ?time1 .
           OPTIONAL { BIND ( IF (isBlank(?o1), ?o1, 0) as ?h2)
                ?h2 ?p2 ?o2 }
  }
  FILTER EXISTS { GRAPH <poststateless> {
      ?event2 a ep:EventObject ;
              ep:hasEventObjectSamplingTime ?time2 .
      FILTER (?time1 < ?time2)
  }  }
} ;

# Output named graphs

# This query is included in testing / debugging executions to print triples written into named graphs

# @name Output
CONSTRUCT { GRAPH <poststateful> { ?s ?p ?o } } WHERE { GRAPH <poststateful> { ?s ?p ?o } }
